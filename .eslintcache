[{"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/index.tsx":"1","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/reportWebVitals.ts":"2","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/App.tsx":"3","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chat/Chat.tsx":"4","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/index.ts":"5","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/header/Header.tsx":"6","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebar/Sidebar.tsx":"7","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatBody/ChatBody.tsx":"8","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/config.ts":"9","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/implementation.ts":"10","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebarOption/SidebarOption.tsx":"11","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/message/Message.tsx":"12","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatInput/ChatInput.tsx":"13","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/login/Login.tsx":"14"},{"size":500,"mtime":1609949919762,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609949919766,"results":"17","hashOfConfig":"16"},{"size":1347,"mtime":1610123519399,"results":"18","hashOfConfig":"16"},{"size":1068,"mtime":1610064779267,"results":"19","hashOfConfig":"16"},{"size":902,"mtime":1610381438151,"results":"20","hashOfConfig":"16"},{"size":826,"mtime":1609949919754,"results":"21","hashOfConfig":"16"},{"size":1361,"mtime":1610124325932,"results":"22","hashOfConfig":"16"},{"size":2309,"mtime":1610068633472,"results":"23","hashOfConfig":"16"},{"size":847,"mtime":1610060875323,"results":"24","hashOfConfig":"16"},{"size":1750,"mtime":1610064500064,"results":"25","hashOfConfig":"16"},{"size":667,"mtime":1610124137582,"results":"26","hashOfConfig":"16"},{"size":550,"mtime":1610065315211,"results":"27","hashOfConfig":"16"},{"size":982,"mtime":1610065139835,"results":"28","hashOfConfig":"16"},{"size":2468,"mtime":1610123278909,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"h3jwy",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/index.tsx",[],["67","68"],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/reportWebVitals.ts",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/App.tsx",["69","70","71","72"],"import React, { useState ,useRef,useEffect} from 'react';\nimport './App.css';\nimport {useMachine} from '@xstate/react'\nimport clientMachine from './machine'\nimport Chat from './components/chat/Chat';\nimport Login from './components/login/Login'\n\nfunction App() {\nconst [state,send] = useMachine(clientMachine);\nconst [message,setMessage] = useState('');\nconst {socket}:any = state.context;\nconst messages:any = useState(state.context.messages);\nconst [username,setUsername] = useState('');\n\nuseEffect(()=>{\n  //console.log(messages,'@@@@@@@@@@@@@@@@@@@@@');\n  console.log(state.context,'APP.tsx');\n  \n},[])\n\n// const handleLogin = (username:any)=> (send:any)=>{\n//   console.log(username ,'@@@@@@@@@@@@@@@@@@@@')\n//   send({\n//           type:'SUBMIT',\n//           payload:username\n//   });\n\n\n  const handleLogin = (username:any)=>{\n    setUsername(username);\n    send('SUBMIT',{payload:username});\n    socket.emit('introduceUser',{socket_id:socket.id,username:username});\n  }\n\n  return (\n    \n    <div className=\"app\">\n    {/* {<Chat socket={socket} messages={messages}></Chat>} */}\n    {state.matches('login')?\n    (<Login  handleLogin={handleLogin} socket={socket}></Login>):\n    <Chat socket={socket} \n          username={username} \n          messages={messages}\n          state={state}></Chat>}\n    {}\n    </div>\n  );\n}\n\nexport default App;\n","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chat/Chat.tsx",["73"],"import React from 'react'\nimport Header from '../header/Header';\nimport Sidebar from '../sidebar/Sidebar'\nimport {BrowserRouter as Router ,Switch, Route} from 'react-router-dom'\nimport ChatBody from '../chatBody/ChatBody';\nimport './Chat.css'\nimport { PeopleSharp } from '@material-ui/icons';\n\nexport interface IChatProps{\n      socket:any,\n      messages:any,\n      username:any,\n      state:any\n}\n\nfunction Chat(props:IChatProps) {\n  console.log(props.state.context.username,'CHAT')\n  const username = props.state.context.username;\n  return (\n    <div>\n      <Router>\n        <Header></Header>\n        <div className=\"chatApp__body\">\n            <Sidebar username={props.username}></Sidebar>\n            <Switch>\n              <Route path=\"/roomId/:roomId\">\n                <h1>hey</h1>\n              </Route>\n              <Route path=\"/\">\n              <ChatBody socket={props.socket} username={username} messages={props.messages}></ChatBody>\n              </Route>\n            </Switch>\n        </div>\n      </Router>\n      \n    </div>\n  )\n}\n\nexport default Chat\n","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/index.ts",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/header/Header.tsx",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebar/Sidebar.tsx",["74","75"],"import React from 'react'\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport SidebarOption from '../sidebarOption/SidebarOption';\nimport GroupIcon from '@material-ui/icons/Group';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport './Sidebar.css';\n\ninterface ISidebar{\n    username:any\n}\n\nfunction Sidebar(props:ISidebar) {\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <div className=\"sidebar__info\">\n                    <h2>DNA Micro</h2>\n                    <h3>\n                        <FiberManualRecordIcon/>\n                        {props.username}\n                    </h3>\n                </div>\n                <CreateIcon/>\n            </div>\n            <SidebarOption Icon={InsertCommentIcon} title=\"Broadcasts Message\"></SidebarOption>\n            <hr/>\n            <SidebarOption Icon={ExpandLessIcon} title=\"Online users\"></SidebarOption>\n            <SidebarOption  title=\"Dan\"></SidebarOption>\n            <SidebarOption  title=\"Tips\"></SidebarOption>\n            <SidebarOption  title=\"Paul\"></SidebarOption>\n        </div>\n    )\n}\n\nexport default Sidebar","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatBody/ChatBody.tsx",["76"],"import React from 'react'\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined'; \nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport './ChatBody.css'\nimport { useParams } from 'react-router-dom';\nimport Message from '../message/Message'\nimport ChatInput from '../chatInput/ChatInput'\nimport { useState } from 'react';\n\nexport interface IChatProps{\n    socket:any,\n    messages:any,\n    username:any\n}\ninterface IMessage{\n    msg:string,\n    type?:string,\n    username:any\n}\nfunction ChatBody(props:IChatProps) {\n    const {roomId}:any = useParams();\n    const [messages,setMessages] = useState(props.messages[0]);\n\n    const displayMessage = (msg:IMessage)=>{\n        const mssgs = [...messages, msg];\n        setMessages(mssgs);\n    }\n    props?.socket?.on('toAll',(msg:any)=>{\n        const m:IMessage={\n            msg:msg.msg,\n            type:'message',\n            username:msg.username\n        }\n        setMessages([...messages,m])    \n    })\n    return (\n        <div className=\"chatBody\">\n            <div className=\"chat__header\">\n                <div className=\"chat__headerLeft\">\n                   <h4 className=\"chat_channelName\">\n                   <strong># Youtube</strong>\n                   <StarBorderOutlinedIcon/>\n                   </h4>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <p>\n                    <InfoOutlinedIcon/> Details\n                    </p>\n                </div>\n               \n            </div>\n            <div className=\"chat__messages\">\n\n                  {/* <Message message=\"YOYOY\" className=\"messageRight\"/> */}\n                   {\n                       messages.map((message:any)=>{\n                           return <Message key={message.username} username={message.username} message={message.msg} className={message.type}/> \n                       })\n                   }\n                   {/* {\n                       newMessage?.map(msg=>{\n                        return <Message message={msg} className=\"messageRight\"/> \n                       })\n                   } */}\n            </div>\n            <ChatInput socket={props.socket} username={props.username} displayMessage={displayMessage}></ChatInput>\n        </div>\n    )\n}\n\nexport default ChatBody\n","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/config.ts",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/implementation.ts",["77"],"import { env } from \"process\";\nimport { assign } from \"xstate\";\nimport {IMessage} from './interfaces'\nconst io =  require('socket.io-client');\n\nconst implemention = {\n    services:{\n        \n        connectToServer:({port,url}:any,event:any)=>(send:any)=>{\n               const socket = io.connect(`${url}${port}`);\n               send({\n                type:'CONNECTED',\n                payload:socket\n            })\n            \n        },\n        listeningToServer:({socket}:any,event:any)=>(send:any)=>{\n            \n            socket.on('connect',(data:any)=>{\n                console.log(\"ID:\",socket.id);\n                socket.on('message',(msg:any)=>{\n                    console.log(msg,\"---from server\");\n                    \n                });\n            })\n            socket.on('toAll',(msg:any)=>{\n                console.log(msg,'BROADCAST FROM SERVER');\n               send({\n                   type:'ASSIGN',\n                   payload:msg\n               })\n            })\n        }\n    },\n    actions:{\n        assignSocket:assign({\n            socket:(context:any,event:any)=> event.payload\n        }),\n        assignUsername:assign({\n            username:(context:any,event:any)=> {\n\n          console.log(event.payload ,'@@@@@@@@@@@@@@@@@@@@')\n                return event.payload\n            }\n        }),\n        assignMessage:assign({\n            messages:(context:any,event:any)=>{\n                const m :IMessage ={\n                    msg:event.payload,\n                    type:'message'\n                }\n                const v = [...context.messages, m];\n                console.log('YOOOOOOOWWWW',v);\n                return[...context.messages, m]\n            }\n        }),\n    }\n}\n\n\nexport default implemention;","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebarOption/SidebarOption.tsx",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/message/Message.tsx",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatInput/ChatInput.tsx",["78","79","80","81"],"import { Button } from '@material-ui/core'\nimport React, { useRef, useState ,useLayoutEffect} from 'react'\nimport './ChatInput.css'\nimport io from 'socket.io-client';\n\nexport interface IChatProps{\n    socket:any\n    displayMessage:any\n    username:any\n}\nfunction ChatInput(props:IChatProps) {\n\n    const  [input,setInput] = useState('');\n    const sendMessage = ()=>{\n        props.socket.emit('message',{msg:input,username:props.username});\n        props.displayMessage({msg:input,type:'messageRight',username:props.username});\n    }\n    return (\n        <div className=\"chatInput\">\n            <input  placeholder=\"Type message here\" onKeyUp={(e)=>{\n                     setInput((e.target as HTMLInputElement).value);\n                    if(e.key === 'Enter' || e.keyCode === 13){\n                        sendMessage();\n                        (e.target as HTMLInputElement).value = '';\n                    }\n                }}/>\n        </div>\n    )\n}\n\nexport default ChatInput\n",["82","83"],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/login/Login.tsx",["84","85","86","87","88"],"import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react'\nimport { useState } from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n\ninterface ILogin {\n    handleLogin:any,\n    socket:any\n  }\n  \n\nfunction Login(props:ILogin) {\n    const classes = useStyles();\n\n    const [username,setUsername] = useState('');\n\n    const handleLogin =()=>{\n        props.handleLogin(username);\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Chat in\n        </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Username\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onKeyUp={(e)=>{\n               setUsername((e.target as HTMLInputElement).value );\n            }}\n          />\n        \n          <Button\n            // type=\"submit\"\n            onClick={handleLogin}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Continue\n          </Button>\n          \n      </div>\n      \n    </Container>\n  );\n    \n}\n\nexport default Login\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":33},{"ruleId":"93","severity":1,"message":"97","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":15},{"ruleId":"93","severity":1,"message":"98","line":10,"column":16,"nodeType":"95","messageId":"96","endLine":10,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":19,"column":3,"nodeType":"101","endLine":19,"endColumn":5,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":21},{"ruleId":"93","severity":1,"message":"104","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":17},{"ruleId":"93","severity":1,"message":"105","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":22},{"ruleId":"93","severity":1,"message":"106","line":21,"column":12,"nodeType":"95","messageId":"96","endLine":21,"endColumn":18},{"ruleId":"93","severity":1,"message":"107","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"93","severity":1,"message":"108","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":23},{"ruleId":"93","severity":1,"message":"109","line":2,"column":35,"nodeType":"95","messageId":"96","endLine":2,"endColumn":50},{"ruleId":"93","severity":1,"message":"110","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":10},{"ruleId":"89","replacedBy":"111"},{"ruleId":"91","replacedBy":"112"},{"ruleId":"93","severity":1,"message":"113","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":24},{"ruleId":"93","severity":1,"message":"114","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":16},{"ruleId":"93","severity":1,"message":"115","line":11,"column":8,"nodeType":"95","messageId":"96","endLine":11,"endColumn":12},{"ruleId":"93","severity":1,"message":"116","line":12,"column":8,"nodeType":"95","messageId":"96","endLine":12,"endColumn":12},{"ruleId":"93","severity":1,"message":"117","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":11},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.context'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'PeopleSharp' is defined but never used.","'GroupIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'roomId' is assigned a value but never used.","'env' is defined but never used.","'Button' is defined but never used.","'useLayoutEffect' is defined but never used.","'io' is defined but never used.",["118"],["119"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [state.context]",{"range":"123","text":"124"},[603,605],"[state.context]"]