[{"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/index.tsx":"1","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/reportWebVitals.ts":"2","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/App.tsx":"3","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chat/Chat.tsx":"4","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/index.ts":"5","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/header/Header.tsx":"6","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebar/Sidebar.tsx":"7","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatBody/ChatBody.tsx":"8","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/config.ts":"9","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/implementation.ts":"10","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebarOption/SidebarOption.tsx":"11","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/message/Message.tsx":"12","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatInput/ChatInput.tsx":"13","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/login/Login.tsx":"14"},{"size":500,"mtime":1609949919762,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609949919766,"results":"17","hashOfConfig":"16"},{"size":1421,"mtime":1610488133357,"results":"18","hashOfConfig":"16"},{"size":1037,"mtime":1610488179332,"results":"19","hashOfConfig":"16"},{"size":924,"mtime":1610472986756,"results":"20","hashOfConfig":"16"},{"size":826,"mtime":1609949919754,"results":"21","hashOfConfig":"16"},{"size":2871,"mtime":1610486437331,"results":"22","hashOfConfig":"16"},{"size":2309,"mtime":1610068633472,"results":"23","hashOfConfig":"16"},{"size":1042,"mtime":1610487966409,"results":"24","hashOfConfig":"16"},{"size":2143,"mtime":1610488340869,"results":"25","hashOfConfig":"16"},{"size":667,"mtime":1610124137582,"results":"26","hashOfConfig":"16"},{"size":550,"mtime":1610065315211,"results":"27","hashOfConfig":"16"},{"size":982,"mtime":1610065139835,"results":"28","hashOfConfig":"16"},{"size":2468,"mtime":1610123278909,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"h3jwy",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/index.tsx",[],["63","64"],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/reportWebVitals.ts",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/App.tsx",["65","66","67","68","69"],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chat/Chat.tsx",["70"],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/index.ts",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/header/Header.tsx",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebar/Sidebar.tsx",["71","72"],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatBody/ChatBody.tsx",["73"],"import React from 'react'\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined'; \nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport './ChatBody.css'\nimport { useParams } from 'react-router-dom';\nimport Message from '../message/Message'\nimport ChatInput from '../chatInput/ChatInput'\nimport { useState } from 'react';\n\nexport interface IChatProps{\n    socket:any,\n    messages:any,\n    username:any\n}\ninterface IMessage{\n    msg:string,\n    type?:string,\n    username:any\n}\nfunction ChatBody(props:IChatProps) {\n    const {roomId}:any = useParams();\n    const [messages,setMessages] = useState(props.messages[0]);\n\n    const displayMessage = (msg:IMessage)=>{\n        const mssgs = [...messages, msg];\n        setMessages(mssgs);\n    }\n    props?.socket?.on('toAll',(msg:any)=>{\n        const m:IMessage={\n            msg:msg.msg,\n            type:'message',\n            username:msg.username\n        }\n        setMessages([...messages,m])    \n    })\n    return (\n        <div className=\"chatBody\">\n            <div className=\"chat__header\">\n                <div className=\"chat__headerLeft\">\n                   <h4 className=\"chat_channelName\">\n                   <strong># Youtube</strong>\n                   <StarBorderOutlinedIcon/>\n                   </h4>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <p>\n                    <InfoOutlinedIcon/> Details\n                    </p>\n                </div>\n               \n            </div>\n            <div className=\"chat__messages\">\n\n                  {/* <Message message=\"YOYOY\" className=\"messageRight\"/> */}\n                   {\n                       messages.map((message:any)=>{\n                           return <Message key={message.username} username={message.username} message={message.msg} className={message.type}/> \n                       })\n                   }\n                   {/* {\n                       newMessage?.map(msg=>{\n                        return <Message message={msg} className=\"messageRight\"/> \n                       })\n                   } */}\n            </div>\n            <ChatInput socket={props.socket} username={props.username} displayMessage={displayMessage}></ChatInput>\n        </div>\n    )\n}\n\nexport default ChatBody\n","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/config.ts",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/machine/implementation.ts",["74","75"],"import { env } from \"process\";\nimport { assign } from \"xstate\";\nimport {IMessage} from './interfaces'\nconst io =  require('socket.io-client');\n\nconst implemention = {\n    services:{\n        \n        connectToServer:({port,url}:any,event:any)=>(send:any)=>{\n               const socket = io.connect(`${url}${port}`);\n               send({\n                type:'CONNECTED',\n                payload:socket\n            })\n            \n        },\n        listeningToServer:({socket}:any,event:any)=>(send:any)=>{\n            \n            socket.on('connect',(data:any)=>{\n                console.log(\"ID:\",socket.id);\n                socket.on('message',(msg:any)=>{\n                    console.log(msg,\"---from server\");\n                    \n                });\n            })\n            socket.on('toAll',(msg:any)=>{\n                console.log(msg,'BROADCAST FROM SERVER');\n               send({\n                   type:'ASSIGN_USERNAME',\n                   payload:msg\n               })\n            });\n            socket.on('USERS',(msg:any)=>{\n                console.log(msg,'BROADCAST FROM SERVER');\n               send({\n                   type:'ASSIGN_USERS',\n                   payload:msg\n               })\n            })\n        }\n    },\n    actions:{\n        assignSocket:assign({\n            socket:(context:any,event:any)=> event.payload\n        }),\n        assignUsername:assign({\n            username:(context:any,event:any)=> {\n                return event.payload\n            }\n        }),\n        assignMessage:assign({\n            messages:(context:any,event:any)=>{\n                const m :IMessage ={\n                    msg:event.payload,\n                    type:'message'\n                }\n                const v = [...context.messages, m];\n                return[...context.messages, m]\n            }\n        }),\n        requestUsers:({socket}:any,_event:any)=>{\n            socket.emit('GET_USERS',`from ${socket.id}`);\n        },\n        assignUsers:assign({\n            users:(context:any,event:any)=>{\n                return event.payload\n            }\n        }),\n        \n    }\n}\n\n\nexport default implemention;","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/sidebarOption/SidebarOption.tsx",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/message/Message.tsx",[],"/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/chatInput/ChatInput.tsx",["76","77","78","79"],"import { Button } from '@material-ui/core'\nimport React, { useRef, useState ,useLayoutEffect} from 'react'\nimport './ChatInput.css'\nimport io from 'socket.io-client';\n\nexport interface IChatProps{\n    socket:any\n    displayMessage:any\n    username:any\n}\nfunction ChatInput(props:IChatProps) {\n\n    const  [input,setInput] = useState('');\n    const sendMessage = ()=>{\n        props.socket.emit('message',{msg:input,username:props.username});\n        props.displayMessage({msg:input,type:'messageRight',username:props.username});\n    }\n    return (\n        <div className=\"chatInput\">\n            <input  placeholder=\"Type message here\" onKeyUp={(e)=>{\n                     setInput((e.target as HTMLInputElement).value);\n                    if(e.key === 'Enter' || e.keyCode === 13){\n                        sendMessage();\n                        (e.target as HTMLInputElement).value = '';\n                    }\n                }}/>\n        </div>\n    )\n}\n\nexport default ChatInput\n","/home/dna-developer/Documents/Exercises/chat-app-xstate-socket-io/src/components/login/Login.tsx",["80","81","82","83","84"],"import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react'\nimport { useState } from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n\ninterface ILogin {\n    handleLogin:any,\n    socket:any\n  }\n  \n\nfunction Login(props:ILogin) {\n    const classes = useStyles();\n\n    const [username,setUsername] = useState('');\n\n    const handleLogin =()=>{\n        props.handleLogin(username);\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Chat in\n        </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Username\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onKeyUp={(e)=>{\n               setUsername((e.target as HTMLInputElement).value );\n            }}\n          />\n        \n          <Button\n            // type=\"submit\"\n            onClick={handleLogin}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Continue\n          </Button>\n          \n      </div>\n      \n    </Container>\n  );\n    \n}\n\nexport default Login\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":33},{"ruleId":"89","severity":1,"message":"93","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":15},{"ruleId":"89","severity":1,"message":"94","line":10,"column":16,"nodeType":"91","messageId":"92","endLine":10,"endColumn":26},{"ruleId":"89","severity":1,"message":"95","line":13,"column":7,"nodeType":"91","messageId":"92","endLine":13,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":20,"column":3,"nodeType":"98","endLine":20,"endColumn":5,"suggestions":"99"},{"ruleId":"89","severity":1,"message":"100","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":21},{"ruleId":"89","severity":1,"message":"101","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"102","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":22},{"ruleId":"89","severity":1,"message":"103","line":21,"column":12,"nodeType":"91","messageId":"92","endLine":21,"endColumn":18},{"ruleId":"89","severity":1,"message":"104","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"105","line":57,"column":23,"nodeType":"91","messageId":"92","endLine":57,"endColumn":24},{"ruleId":"89","severity":1,"message":"106","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":2,"column":17,"nodeType":"91","messageId":"92","endLine":2,"endColumn":23},{"ruleId":"89","severity":1,"message":"107","line":2,"column":35,"nodeType":"91","messageId":"92","endLine":2,"endColumn":50},{"ruleId":"89","severity":1,"message":"108","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":10},{"ruleId":"89","severity":1,"message":"109","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":24},{"ruleId":"89","severity":1,"message":"110","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":16},{"ruleId":"89","severity":1,"message":"111","line":11,"column":8,"nodeType":"91","messageId":"92","endLine":11,"endColumn":12},{"ruleId":"89","severity":1,"message":"112","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":12},{"ruleId":"89","severity":1,"message":"113","line":13,"column":8,"nodeType":"91","messageId":"92","endLine":13,"endColumn":11},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'users' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.context'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'PeopleSharp' is defined but never used.","'GroupIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'roomId' is assigned a value but never used.","'env' is defined but never used.","'v' is assigned a value but never used.","'Button' is defined but never used.","'useLayoutEffect' is defined but never used.","'io' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [state.context]",{"range":"119","text":"120"},[652,654],"[state.context]"]